name: 교육 뉴스 크롤링

on:
  schedule:
    # 매시간 정시에 실행 (한국시간)
    - cron: "0 * * * *" # UTC 기준 (한국시간 -9시간)
  workflow_dispatch: # 수동 실행 가능

jobs:
  crawl-news:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        run: |
          echo "📁 GitHub Actions 자동 체크아웃 확인..."
          echo "📁 현재 디렉토리:"
          pwd
          echo "📁 파일 목록:"
          ls -la
          echo "📄 Python 파일들:"
          find . -name "*.py" -type f
          echo "📄 기타 파일들:"
          find . -name "*.txt" -o -name "*.json" -o -name "*.md" | head -10
          
          # 만약 파일이 없다면 직접 다운로드
          if [ ! -f "main_final.py" ]; then
            echo "📥 Repository 파일들을 직접 다운로드합니다..."
            curl -L https://github.com/Teacher-Kwon/Edu_crawler/archive/main.tar.gz | tar -xz --strip-components=1
            echo "📁 다운로드 후 파일 목록:"
            ls -la
            echo "📄 Python 파일들:"
            find . -name "*.py" -type f
          fi

      - name: Python 설정 및 의존성 설치
        run: |
          echo "🐍 Python 환경 설정 중..."
          python --version
          pip --version

          echo "📁 현재 디렉토리 확인:"
          pwd
          ls -la

          echo "📦 requirements.txt 파일 확인:"
          if [ -f "requirements.txt" ]; then
            echo "✅ requirements.txt 파일 발견"
            cat requirements.txt
            echo "📦 의존성 설치 중..."
            pip install -r requirements.txt
          else
            echo "❌ requirements.txt 파일이 없습니다. 수동으로 설치합니다."
            pip install requests beautifulsoup4 lxml pandas openpyxl pytz google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client schedule psutil python-dotenv
          fi

      - name: 환경변수 설정
        run: |
          echo "SPREADSHEET_ID=${{ secrets.SPREADSHEET_ID }}" >> $GITHUB_ENV
          echo "GOOGLE_CREDENTIALS_FILE=credentials.json" >> $GITHUB_ENV

      - name: Google Sheets 인증 설정
        run: |
          echo '${{ secrets.GOOGLE_CREDENTIALS_JSON }}' > credentials.json

      - name: 뉴스 크롤링 실행
        run: |
          echo "🔄 크롤링 시작: $(date)"

          echo "📁 현재 디렉토리 파일 목록:"
          ls -la

          echo "📄 Python 파일 확인:"
          if [ -f "main_final.py" ]; then
            echo "✅ main_final.py 파일 발견"
            python main_final.py
          else
            echo "❌ main_final.py 파일이 없습니다."
            echo "📄 사용 가능한 Python 파일들:"
            find . -name "*.py" -type f
            echo "💡 main.py 또는 다른 메인 파일을 찾아서 실행합니다."
            if [ -f "main.py" ]; then
              echo "✅ main.py 파일 발견 - 실행합니다."
              python main.py
            else
              echo "❌ 실행할 수 있는 메인 Python 파일이 없습니다."
              echo "📋 현재 디렉토리의 모든 파일:"
              find . -type f
            fi
          fi

          echo "✅ 크롤링 완료: $(date)"

      - name: 결과 정리 (용량 최적화)
        run: |
          echo "📊 실행 시간: $(date)"
          echo "📁 현재 디렉토리: $(pwd)"
          echo "📄 생성된 파일들:"
          ls -la *.json *.log 2>/dev/null || echo "파일 없음"

          # 오래된 로그 파일 삭제 (7일 이상)
          find . -name "*.log" -mtime +7 -delete

          # JSON 파일 압축
          gzip -k education_news_*.json 2>/dev/null || true

      - name: 결과 파일 확인
        run: |
          echo "📊 실행 결과 확인:"
          echo "📁 현재 디렉토리: $(pwd)"
          echo "📄 생성된 파일들:"
          ls -la *.json *.log 2>/dev/null || echo "파일 없음"

          echo "✅ 크롤링 작업 완료!"
